generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Todo      Todo[]
  Recipe    Recipe[] // Relation to Recipe model

  @@map("users")
}

model Todo {
  id        String    @id @default(cuid())
  content   String
  completed Boolean   @default(false)
  important Boolean   @default(false)
  startDate DateTime?
  endDate   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@index([userId, startDate])
  @@index([userId, endDate])
}

// New model for Recipes
model Recipe {
  id           String   @id @default(cuid())
  name         String
  ingredients  String   @db.Text // Suitable for potentially long text
  instructions String   @db.Text // Suitable for potentially long text
  category     String? // Optional field for recipe category
  prepTime     String? // Optional, e.g., "30 minutes"
  cookTime     String? // Optional, e.g., "1 hour"
  isFavorite   Boolean  @default(false) // To mark favorite recipes
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String // Foreign key to link to the User model
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt]) // Index for common query: user's recipes sorted by creation
  @@index([userId, isFavorite]) // Index for common query: user's favorite recipes
  @@map("recipes") // Explicitly maps to the 'recipes' table in the database
}
